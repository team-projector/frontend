@import "src/assets/styles/variables";
@import "~@esanum/ui/lib/assets/styles/layout/block";
@import "~@esanum/ui/lib/assets/styles/elements/label";
@import "~@esanum/ui/lib/assets/styles/elements/icon";
$sn-ng-deep: true;

:host {
  display: block;

  @include sn-block((body: (padding: 0 0 $app-gutter-normal 0)));
}

[data-user] {
  padding: 0 $app-gutter-large;
  @include sn-label((color: $app-primary-color));
  [data-position] {
    color: $app-primary-light-color;
    font-weight: $app-font-weight-bold;
    font-size: $app-font-size-base;
  }
}

[data-salary] {
  position: relative;
  padding: $app-gutter-normal $app-gutter-large;
  font-size: 26px;
  background: $app-primary-color;
  color: $app-white-color;
  [data-label] {
    font-size: 12px;
  }
  [data-money] {
    @include sn-icon((color: $app-primary-light-color, size: 30px), '&');
  }
  [data-opened] {
    color: rgba($app-white-color, .5);
    font-size: 18px;
    [data-label] {
      font-size: 12px;
      color: $app-primary-light-color;
    }
  }
  [data-digit] {
    font-weight: $app-font-weight-bold;
  }
  [data-line] {
    font-size: $app-font-size-base;
    padding: $app-gutter-small 0;
    &:not(:last-of-type) {
      border-bottom: 1px dashed $app-primary-light-color;
    }
    [data-title] {
      font-weight: $app-font-weight-bold;
    }
    [data-time] {
      color: $app-secondary-dark-color;
      font-size: $app-font-size-normal;
      @include sn-icon((color: $app-secondary-dark-color));
      span {
        font-size: 12px;
      }
    }
    > span {
      font-size: 18px;
      font-weight: $app-font-weight-bold;
    }
    &[data-success] {
      > span {
        color: $app-success-color;
      }
    }
    &[data-fail] {
      > span {
        color: $app-fail-color;
      }
    }
  }
  hr {
    border: 0;
    height: 1px;
    background: $app-primary-light-color;
    width: 80px;
    align-self: flex-end;
    margin-right: 0;
  }
  svg {
    fill: $app-primary-color;
    position: absolute;
    top: 100%;
    left: 50%;
    transform: translateX(-50%);
    &[data-opened='true'] {
      transform: translateX(-50%) rotate(180deg);
      fill: $app-white-color;
      top: auto;
      bottom: 0;
    }
  }
}
